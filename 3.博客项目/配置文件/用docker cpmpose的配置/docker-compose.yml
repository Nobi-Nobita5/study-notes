version: "3"
services:
  nginx: # 服务名称，用户自定义
    container_name: nginx
    image: nginx:latest  # 镜像版本
    ports:
      - 80:80  # 暴露端口
    volumes: # 挂载
      - /root/nginx/html:/usr/share/nginx/html
      - /root/nginx/nginx.conf:/etc/nginx/nginx.conf
    privileged: true # 这个必须要，解决nginx的文件调用的权限问题
  mysql:
    container_name: mysql
    image: mysql:latest
    environment: # 指定用户root的密码
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - 3306:3306
    networks:
      mynetwork2:
        ipv4_address: 172.22.0.99
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      mynetwork2:
        ipv4_address: 172.22.0.3
    command: redis-server /etc/redis.conf #主机挂载文件覆盖容器启动的redis.conf，这里要写容器目录
    #定义挂载点
    volumes:
      - /root/redis/data:/data:rw
      - /root/redis/conf/redis.conf:/etc/redis.conf:rw
    privileged: true  #环境变量
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8      
  vue-springboot-blog:
    container_name: blog
    image: vueblog:latest
    build: . # 表示以当前目录下的Dockerfile开始构建镜像
    ports:
      - 8081:8081
    networks:
      mynetwork2:
        ipv4_address: 172.22.0.2
    depends_on: # 依赖与mysql、redis，其实可以不填，默认已经表示可以
      - mysql
      - redis

networks:
  mynetwork2:
    ipam:
      driver: default
      config:
        - subnet: "172.22.0.0/24"
          gateway: 172.22.0.1